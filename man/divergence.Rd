% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_group_measures.R
\name{divergence}
\alias{divergence}
\title{Divergence Index}
\source{
Created by Elizabeth Roberto: \url{https://arxiv.org/abs/1508.01167}
}
\usage{
divergence(
  ...,
  population = NA,
  na.rm = TRUE,
  summed = FALSE,
  logBase = exp(1),
  comparison = NULL,
  sumPercent = NA,
  weights = NA,
  rowTotals = NA
)
}
\arguments{
\item{...}{Vectors containing proportions of each group, or a dataframe containing only those vectors.}

\item{population}{A vector of population totals for each row, or weights summing to a total of
one. If NA, will assume all populations/weights are equal. Set to 1 to silence warning.
If a string, will use the string as the named column of the dataframe provided in ...}

\item{na.rm}{logical. Should missing values (including NaN) be removed?
Used only if \code{summed} is set to TRUE.}

\item{summed}{If TRUE, will return a single summary statistic. (Or one value per group if specifying
\code{dplyr::group_by}.) If FALSE (default), will return a vector equaling the length
of the input vectors. If 'weighted' (only for divergence and information theory), returns
a vector as in FALSE, but with pre-weighted values,
such that \verb{sum(divergence(..., summed = 'weighted))} is equivalent to
\code{divergence(..., summed = T)}.}

\item{logBase}{Specify the base for the logathirm used in the equation. Natural logarithm by default.}

\item{comparison}{A vector of percentages that must equal the length of the
number of vectors or columns in \code{...}, representing the percentages of each
group in the larger (comparison) geography.}

\item{weights}{deprecated, use population.}

\item{rowTotals, sumPercent}{deprecated, will throw error.}
}
\value{
A single value if summed==TRUE, or a vector equaling the length of the inputs.
}
\description{
Elizabeth Roberto's Divergence index for calculating and decomposing segregation.
}
\details{
The demographics of each observation are compared to that of their
larger geography, which is inferred from the combination of the percentages in
\code{...} and the population totals in \code{population}, or can be directly provided with
\code{comparison}.
}
\examples{
library(rsegregation)
data("bay_race")
#return by-observation scores
divergence(bay_race$white,bay_race$hispanic,bay_race$asian,
bay_race$black, bay_race$all_other)

# Using dplyr
require(dplyr)
mutate(bay_race, divergence_score = divergence(white, hispanic,
  asian, black, all_other))

# divergence alsow works with percentages as long as you have
# population totals by observation
bay_race \%>\%
  mutate_at(vars(hispanic:all_other), list(~(./total_pop))) \%>\%
  mutate(divergence_score = divergence(white, hispanic, asian,
  black, all_other, weights = total_pop))

}
